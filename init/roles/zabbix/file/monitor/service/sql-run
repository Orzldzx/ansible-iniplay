#!/bin/bash
# 1un
# 2015-10-20
# 自动发现数据库,并监控运行状态

tmpfile=/tmp/sql.tmp
[ ! -s $tmpfile ] && touch $tmpfile

MyUser=view
MyPass=0528ximi2014

DB=()
[ $(which redis-server|wc -l) -eq 1 ] && DB[0]=redis
[ $(which mongod|wc -l) -eq 1 ] && DB[1]=mongo
[ $(which mysqld|wc -l) -eq 1 ] && DB[2]=mysql

Help(){ echo "Usage:$0 { SQL | GetStatus [name] [port] | Slave [name] [port] }" ; }

SQL_INFO(){
    > $tmpfile

    for sql in $(echo ${DB[@]})
    do
        for port in $(netstat -tlnp|grep -v ^...6|grep $sql|awk -F: '{print $2}'|awk '{print $1}')
        do
            printf "%-20s%-s\n" "$sql" "$port" >> $tmpfile
        done
    done

    [ ! -s $tmpfile ] && exit
}

SQL(){
    SQL_INFO
    SQL=($(awk '{print $1}' $tmpfile))
    PORT=($(awk '{print $2}' $tmpfile))
    printf '{\n'
    printf '\t"data":[\n'
    for ((i=0;i<${#PORT[@]};i++))
    do
        num=$(echo $((${#PORT[@]}-1)))
        if [ $i -ne ${num} ]; then
            printf "\t\t{\n"
            printf "\t\t  \"{#SQLNAME}\":\"${SQL[$i]}\",\"{#SQLPORT}\":\"${PORT[$i]}\"},\n"
        else
            printf "\t\t{\n"
            printf "\t\t  \"{#SQLNAME}\":\"${SQL[$num]}\",\"{#SQLPORT}\":\"${PORT[$num]}\"}\n"
            printf '\t\t]\n'
            printf '}\n'
        fi
    done
}

case $1 in
    SQL)
        SQL
        ;;
    GetStatus)
    	[ ! -s $tmpfile ] && echo 1 && exit
    	[ $# -ne 3 ] && { echo "Usage:$0 { SQL | GetStatus [name] [port] | Slave [name] [port] }" ; exit ; } 
        case $2 in
	    mysql)
		stat=$(mysqladmin -u${MyUser} -p${MyPass} -S /var/run/mysqld/mysqld.sock status 2>/dev/null|awk '{print $2}')
		[ -z "$stat" ] && echo 0 || echo 1
		;;
	    mongo)
		stat=$(echo "db.serverStatus()"|mongo 127.0.0.1:${3}/test 2>/dev/null|grep ok)
		[ -z "$stat" ] && echo 0 || echo 1
		;;
	    redis)
		stat=$(echo ping|redis-cli -p $3 2>/dev/null)
		[ -z "$stat" ] && echo 0 || echo 1
		;;
	    *)
		Help
		;;
	esac
	;;
    Slave)
    	[ ! -s $tmpfile ] && echo 1 && exit
    	[ $# -ne 3 ] && { echo "Usage:$0 { SQL | GetStatus [name] [port] | Slave [name] [port] }" ; exit ; } 
	case $2 in
	    mysql)
		[[ $(/usr/bin/mysql -u${MyUser} -p${MyPass} -S /var/run/mysqld/mysqld.sock -e "show slave status\G"|wc -l) < 10 ]] && echo 1 && exit
		Slave=($(/usr/bin/mysql -u${MyUser} -p${MyPass} -S /var/run/mysqld/mysqld.sock -e "show slave status\G"|grep Running|awk '{print $2}'))
		[ "${Slave[0]}" = "Yes" -a "${Slave[1]}" = "Yes" ] && echo 1 || echo 0
		;;
	    redis)
		[[ $(redis-cli -p $3 info 2>/dev/null|awk -F':' '/^role/ {print $2}'|tr -d '\r') == "master" ]] && echo 1 && exit
		stat=$(redis-cli -p $3 info 2>/dev/null|awk -F: '/master_link_status/ {print $NF}'|sed 's/\r$//')
		[ "$stat" = "up" ] && echo 1 || echo 0
		;;
	    mongo)
		[[ $(grep ^master /etc/mongod.conf|wc -l) > 0 ]] && echo 1 && exit
		state="$(mongo 127.0.0.1:${3}/test --eval "db.printSlaveReplicationInfo()" 2>/dev/null)"
		echo $state > /tmp/slaveR.txt
		num=$(awk '{print $18}' /tmp/slaveR.txt)
		[[ $num -lt 3600 ]] && echo 1 || echo 0
		rm -f /tmp/slaveR.txt
		;;
	    *)
		Help
		;;
	esac
	;;
    *)
	Help
        ;;
esac
