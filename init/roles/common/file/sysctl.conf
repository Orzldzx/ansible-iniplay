net.ipv4.ip_forward = 1                          # 开启ipv4路由转发
net.ipv4.conf.default.rp_filter = 1              # 开启多网卡下接受多播过滤(发给a网卡,b接受到了就被丢弃掉)
net.ipv4.conf.default.accept_source_route = 0    # 不接受源路由
kernel.sysrq = 0                                 # 禁用sysrq(键盘上截图键)
kernel.core_uses_pid = 1                         # 给生成的core文件加上pid
net.ipv4.tcp_syncookies = 1                      # * 开启SYN Cookies(出现SYN等待队列溢出时可防范少量SYN攻击)
kernel.msgmnb = 65536                            # 每个消息队列的最大字节限制
kernel.msgmax = 65536                            # 每个消息的最大size
kernel.shmmax = 68719476736                      # 定义单个共享内存段的最大值
kernel.shmall = 4294967296                       # 控制共享内存页数
net.ipv4.tcp_max_tw_buckets = 6000               # 系统同时保持TIME_WAIT套接字的最大数量(如果超过这个数字,TIME_WAIT套接字将立刻被清除并打印警告信息)
net.ipv4.tcp_sack = 1                            # 开启Selective ACK,用来查找特定丢失数据包,有助于快速恢复状态
net.ipv4.tcp_window_scaling = 1                  # 设置tcp/ip会话的华东窗口大小为可变

net.ipv4.tcp_rmem = 4096 87380 4194304           # 预留接收socket缓冲内存大小
# min:     为TCP socket, 预留用于接收缓冲的内存数量, 即使在内存出现紧张情况下tcp socket都至少会有这么多数量的内存用于接收缓冲, 默认值为8K
# default: 为TCP socket预留用于接收缓冲的内存数量, 默认情况下该值影响其它协议使用的net.core.wmem_default 值. 该值决定了在tcp_adv_win_scale, tcp_app_win和tcp_app_win=0默认值情况下, TCP窗口大小为65535. 默认值为87380
# max:     用于TCP socket接收缓冲的内存最大值. 该值不会影响 net.core.wmem_max, "静态"选择参数 SO_SNDBUF则不受该值影响. 默认值为 128K. 默认值为87380*2 bytes.

net.ipv4.tcp_wmem = 4096 16384 4194304           # 发送(同上)
net.core.wmem_default = 8388608                  # 表示发送套接字缓冲区大小的缺省值(以字节为单位)
net.core.rmem_default = 8388608                  # 表示接收套接字缓冲区大小的缺省值(以字节为单位)
net.core.rmem_max = 16777216                     # 最大socket读buffer, 可参考的优化值:873200
net.core.wmem_max = 16777216                     # 最大socket写buffer, 可参考的优化值:873200
net.core.netdev_max_backlog = 262144             # * 每个网络接口接收数据包的速率比内核处理这些包的速率快时, 允许送到队列的数据包的最大数目.

net.core.somaxconn = 262144                      
# * web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128, 而nginx定义的NGX_LISTEN_BACKLOG默认为511, 所以有必要调整这个值

net.ipv4.tcp_max_orphans = 3276800               # 系统能创建的不属于任何进程的socket数量.快速建立大量连接时,需要关注这个值

net.ipv4.tcp_max_syn_backlog = 262144            # * 记录的那些尚未收到客户端确认信息的连接请求的最大值(syn队列,默认1024)
net.ipv4.tcp_timestamps = 0                      # 关闭TCP连接中TIME-WAIT sockets的快速回收
net.ipv4.tcp_synack_retries = 1                  # * syn-ack握手状态重试次数
net.ipv4.tcp_syn_retries = 1                     # * 外向syn握手重试次数
net.ipv4.tcp_tw_recycle = 1                      # 开启TCP连接中TIME-WAIT sockets的快速回收
net.ipv4.tcp_tw_reuse = 1                        # 表示开启重用. 允许将TIME-WAIT sockets重新用于新的TCP连接

net.ipv4.tcp_mem = 94500000 915000000 927000000
# net.ipv4.tcp_mem[0]:低于此值, TCP没有内存压力
# net.ipv4.tcp_mem[1]:在此值下, 进入内存压力阶段
# net.ipv4.tcp_mem[2]:高于此值, TCP拒绝分配socket
# 上述内存单位是页, 而不是字节. 可参考的优化值是:786432 1048576 1572864

net.ipv4.tcp_fin_timeout = 1                     # 修改系統默认的 TIMEOUT 时间
net.ipv4.tcp_keepalive_time = 1200               # 主动探测socket是否可用的时间间隔
net.ipv4.ip_local_port_range = 1024 65535        # 用于向外连接的端口范围
