#!/bin/bash
# 1un
# 2015-10-20 (up: 2018-01-22 * 修复同一块磁盘下多个分区挂载多个目录获取出错)
# 获取所有磁盘状态信息

DISK=($(awk '/vd[a-z][0-9]{1,2}$/ {print $NF}' /proc/partitions))
DiskName=()

for ((i=0;i<${#DISK[@]};i++)); do
    DiskName[i]=$(df|awk '/'"${DISK[i]}"'/ {print $NF}')
done

Device()
{
	printf '{\n'
	printf '\t"data":[\n'
	for(( i=0;i<${#DISK[@]};i++))
	do
		num=$(echo $((${#DISK[@]}-1 )))
		if [[ "$i" -ne ${num} ]];then
			printf "\t\t{\n"
			printf "\t\t  \"{#DISK}\":\"${DISK[$i]}\",\"{#DISKNAME}\":\"${DiskName[$i]}\"},\n"
		else
			printf "\t\t{\n"
			printf "\t\t  \"{#DISK}\":\"${DISK[$num]}\",\"{#DISKNAME}\":\"${DiskName[$num]}\"}\n"
		fi
	done
	printf "\t\t]\n"
	printf "}\n"
}


disk=$(echo $2 | tr -d [:digit:])
case "$1" in
	DISK)
		Device;;
	USE)
		iostat -kx 1 2| awk '{if($1 == "'$disk'") print $NF}'|tail -1;;
	READ)
		t=$(iostat -kx 1 2| awk '{if($1 == "'$disk'") print $6}'|tail -1)
                result=$(echo "$t * 1024" |bc)
                printf "%.f\n" $result
                ;;
	WRITE)
		t=$(iostat -kx 1 2| awk '{if($1 == "'$disk'") print $7}'|tail -1)
                result=$(echo "$t * 1024" |bc)
                printf "%.f\n" $result
                ;;
	CHECK)
		for ((i=0;i<${#DISK[@]};i++))
		do
			if [[ ${DISK[$i]} = $2 ]]; then
				[[ ! -d ${DiskName[$i]}/tmp ]] && sudo mkdir -p ${DiskName[$i]}/tmp && sudo chmod 777 ${DiskName[$i]}/tmp
				t="${DiskName[$i]}/tmp/disk.tmp"
				[ $? -eq 0 ] && { echo 1 ; rm -f $t ; } || echo 0
			fi
		done
		;;
	*)
		echo "Usage:$0 { DISK | USE [dev] | READ [dev] | WRITE [dev] | CHECK [dev] }"
		exit;;
esac
